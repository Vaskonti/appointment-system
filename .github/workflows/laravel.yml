name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Snyk Code Analysis
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_API_TOKEN }}
          snyk test

  CacheComposer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mysql, mongodb
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist

  PhpCsFixer:
    needs: [CacheComposer, Snyk]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mysql, mongodb
      - name: Restore Composer dependencies from cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction
          --no-scripts --no-progress --prefer-dist
      - name: PHP CS Fixer
        run: |
          ./vendor/bin/php-cs-fixer fix --dry-run --diff ./app
  LaravelTests:
    services:
      mysql-service:
        image: mysql:8
        env:
          MYSQL_DATABASE: appointment_system
          MYSQL_USER: admin
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PASSWORD: password
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s
          --health-timeout=5s --health-retries=3
    needs: [PhpCsFixer]
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v4
    - name: Copy .env.ci to .env
      run: cp .env.ci .env
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database add Laravel Passport
      run: |
        php artisan migrate
        php artisan passport:keys --force
        php artisan passport:client --personal --no-interaction
      env:
         DB_PORT: ${{ job.services.mysql-service.ports[3306]}}
         DB_HOST: 127.0.0.1
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql-service.ports[3306]}}
        DB_DATABASE: appointment_system
        DB_USERNAME: admin
        DB_PASSWORD: password
      run: ./vendor/bin/pest
